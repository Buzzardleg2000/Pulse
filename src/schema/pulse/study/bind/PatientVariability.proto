syntax = "proto3";
package pulse.study.bind.patient_variability;
option java_package = "com.kitware.pulse.study.bind.patient_variability";
option csharp_namespace = "pulse.study.bind.patient_variability";
option optimize_for = SPEED;

import "pulse/cdm/bind/Engine.proto";
import "pulse/cdm/bind/Patient.proto";
import "pulse/cdm/bind/TestReport.proto";

message IterationData
{
  double Start             = 1;
  double Stop              = 2;
  double Step              = 3;
  repeated double Explicit = 4;
}

message PatientIterationData
{
  pulse.cdm.bind.PatientData.eSex                  Sex                        = 1;
  IterationData                                    Age_yr                     = 2;
  IterationData                                    Height_cm                  = 3;
  IterationData                                    BodyMassIndex              = 4;
  IterationData                                    BodyFatFraction            = 5;
  IterationData                                    HeartRate_bpm              = 6;
  IterationData                                    MeanArtierialPressure_mmHg = 7;
  IterationData                                    PulsePressure_mmHg         = 8;
  IterationData                                    RespirationRate_bpm        = 9;
}

message SeverityInsultInterventionIterationData
{
  
  pulse.cdm.bind.AnyActionData                     Insult                     = 1;
  IterationData                                    InsultSeverity             = 2;
  IterationData                                    ApplyInsultSimTime_s       = 3;
  IterationData                                    InsultDuration_s           = 4;
  repeated pulse.cdm.bind.ActionListData           InterventionOption         = 5;
}
message SeverityInsultInterventionIterationListData
{
  repeated SeverityInsultInterventionIterationData InsultIntervention         = 3;
}

message PatientVariabilityData
{
  DataRequestManagerData                           DataRequestManager      = 1;
  repeated string                                  DataRequestFile         = 2;
  repeated PatientIterationData                    PatientIteration        = 3;
  oneof SimulateOptions
  {
    double                                         AdvanceTime_s           = 4;
    SeverityInsultInterventionIterationListData    InsultIntervention      = 5;
  }
}

message PatientStateData
{
  /** @brief Enumeration for engine failure types */
  enum eFailure
  {
    None=0;               /**<< @brief No stabilization failures. */
    FailedSetup=1;        /**<< @brief SetupPatient could not create a valid Pulse patient with provided patient values. */
    FailedStabilization=2;/**<< @brief Pulse was unable to stabilize to provided/computed patient values. */
    RuntimeError=3;       /**<< @brief Error running the engine with (optional) actions. */
    FatalRuntimeError=4;  /**<< @brief Fatal error running the engine with (optional) actions. */
  }

  uint32                                                  ID                                = 1;
  string                                                  OutputBaseFilename                = 2;
  string                                                  StateFilename                     = 3;
  string                                                  Description                       = 4;
  double                                                  MaxSimulationTime_s               = 5;
  double                                                  FinalSimulationTime_s             = 6;/**<< @brief We could stop the sim early (ex. due to hemorrhage) */
  // Requested Patient
  pulse.cdm.bind.PatientData                              Patient                           = 7;
  pulse.cdm.bind.PatientData                              SetupPatient                      = 8;
  // Stabilization Info
  eFailure                                                Failure                           = 9;
  double                                                  StabilizationTime_s               = 10;

  message ValidationData
  {
    map<string,pulse.cdm.bind.PropertyValidationListData> ValidationMap                     = 1;
  }
}

message PatientStateListData
{
  repeated PatientStateData      PatientState               = 1;
}
